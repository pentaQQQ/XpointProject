//
//  QMChatRoomImageCell.m
//  IMSDK-OC
//
//  Created by HCF on 16/3/10.
//  Copyright © 2016年 HCF. All rights reserved.
//

#import "QMChatRoomImageCell.h"
#import <IMSDK/IMSDK.h>
#import "MyTapGestureRecognizer.h"
#import "ShowPicViewController.h"

/**
    图片消息
 */
@implementation QMChatRoomImageCell
{
    UIImageView *_imageView;
    
    NSString *_messageId;
}

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        [self createUI];
    }
    return self;
}

- (void)createUI {
    _imageView = [[UIImageView alloc] init];
    _imageView.userInteractionEnabled = YES;
    [self.contentView addSubview:_imageView];
    
    UILongPressGestureRecognizer * longPressGesture = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPressTapGesture:)];
    [_imageView addGestureRecognizer:longPressGesture];
}

- (void)setData:(CustomMessage *)message {
    _messageId = message._id;
    
    if (self.timeLabel.hidden == YES) {
        self.timeLabel.frame = CGRectZero;
    }else {
        self.timeLabel.frame = CGRectMake(0, 10, kScreenWidth, 20);
    }
    
    self.timeLabel.text = [Util showChatTime:message.createdTime];
    
    // 重写
    if ([message.fromType isEqualToString:@"0"]) {
        //发送
        self.iconImage.image = [UIImage imageNamed:@"qm_default_icon"];
        self.iconImage.frame = CGRectMake(kScreenWidth-55, CGRectGetMaxY(self.timeLabel.frame)+10, 41, 41);
        
        UIImage *image = [UIImage imageNamed:@"SenderTextNodeBkg"];
        self.chatBackgroudImage.image = image;
        self.chatBackgroudImage.image = [self.chatBackgroudImage.image stretchableImageWithLeftCapWidth:20 topCapHeight:30];
    }else {
        //接收
//        self.iconImage.image = [UIImage imageNamed:@"qm_default_icon"];
        if (message.agentIcon) {
            [self.iconImage sd_setImageWithURL:[NSURL URLWithString:message.agentIcon] placeholderImage:[UIImage imageNamed:@"qm_default_icon"]];
        }else {
            self.iconImage.image = [UIImage imageNamed:@"qm_default_icon"];
        }
        self.iconImage.frame = CGRectMake(10, CGRectGetMaxY(self.timeLabel.frame)+10, 41, 41);
        
        UIImage *image = [UIImage imageNamed:@"ReceiverTextNodeBkg"];
        self.chatBackgroudImage.image = image;
        self.chatBackgroudImage.image = [self.chatBackgroudImage.image stretchableImageWithLeftCapWidth:20 topCapHeight:30];
        
        self.sendStatus.hidden = YES;
    }
    
    if ([message.fromType isEqualToString:@"0"]) {
        NSString *filePath = [NSString stringWithFormat:@"%@/%@/%@",NSHomeDirectory(),@"Documents",message.message];
        _imageView.image = [UIImage imageWithContentsOfFile:filePath];
        _imageView.frame = CGRectMake(CGRectGetMinX(self.iconImage.frame)-5-120, CGRectGetMaxY(self.timeLabel.frame)+10, 120, 140);
        UIImageView *maskImageView = [[UIImageView alloc] initWithFrame:_imageView.frame];
        maskImageView.image = [[UIImage imageNamed:@"SenderTextNodeBkg"] stretchableImageWithLeftCapWidth:20 topCapHeight:30];
        CALayer *layer = maskImageView.layer;
        layer.frame = CGRectMake(0, 0, maskImageView.frame.size.width, maskImageView.frame.size.height);
        _imageView.layer.mask = layer;
        
        self.sendStatus.frame = CGRectMake(CGRectGetMinX(_imageView.frame)-25, CGRectGetMaxY(_imageView.frame)-32, 20, 20);
    }else {
        [_imageView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@?imageView2/0/w/200/interlace/1/q/80",message.message]]];
        _imageView.frame = CGRectMake(CGRectGetMaxX(self.iconImage.frame)+5, CGRectGetMaxY(self.timeLabel.frame)+5, 120, 140);
        UIImageView *maskImageView = [[UIImageView alloc] initWithFrame:_imageView.frame];
        maskImageView.image = [[UIImage imageNamed:@"ReceiverTextNodeBkg"] stretchableImageWithLeftCapWidth:20 topCapHeight:30];
        CALayer *layer = maskImageView.layer;
        layer.frame = CGRectMake(0, 0, maskImageView.frame.size.width, maskImageView.frame.size.height);
        _imageView.layer.mask = layer;
    }
    
    MyTapGestureRecognizer * tapPressGesture = [[MyTapGestureRecognizer alloc] initWithTarget:self action:@selector(imagePressGesture:)];
    tapPressGesture.picName = message.message;
    tapPressGesture.picType = message.fromType;
    tapPressGesture.image = _imageView.image;
    [_imageView addGestureRecognizer:tapPressGesture];
    
    [super setData:message];
}

- (void)longPressTapGesture:(UILongPressGestureRecognizer *)sender {
    if (sender.state == UIGestureRecognizerStateBegan) {
        NSLog(@"文本长按手势");
        [self becomeFirstResponder];
        UIMenuController *menu = [UIMenuController sharedMenuController];
        UIMenuItem *removeMenu = [[UIMenuItem alloc] initWithTitle:@"删除" action:@selector(removeMenu:)];
        [menu setMenuItems:[NSArray arrayWithObjects:removeMenu, nil]];
        [menu setTargetRect:_imageView.frame inView:self];
        [menu setMenuVisible:true animated:true];
        
        UIWindow *window = [[[UIApplication sharedApplication] delegate] window];
        if ([window isKeyWindow] == NO) {
            [window becomeKeyWindow];
            [window makeKeyAndVisible];
        }
    }
}

- (BOOL)canBecomeFirstResponder {
    return YES;
}

- (BOOL)canPerformAction:(SEL)action withSender:(id)sender {
    if (action == @selector(removeMenu:)) {
        return YES;
    }else {
        return  NO;
    }
}

- (void)imagePressGesture:(MyTapGestureRecognizer *)gestureRecognizer {
    NSLog(@"点击放大图片");
    ShowPicViewController * showPicVC = [[ShowPicViewController alloc] init];
    showPicVC.picName = gestureRecognizer.picName;
    showPicVC.picType = gestureRecognizer.picType;
    showPicVC.image = gestureRecognizer.image;
    [[UIApplication sharedApplication].keyWindow.rootViewController presentViewController:showPicVC animated:true completion:nil];
}

- (void)removeMenu:(id)sender {
    // 删除语音(只能删除本地数据库消息)
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:@"进行此操作将删除此消息且不能恢复，是否执行删除" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
    
    }];
    UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [QMConnect removeDataFromDataBase:_messageId];
        [[NSNotificationCenter defaultCenter] postNotificationName:CHATMSG_RELOAD object:nil];
    }];
    [alertController addAction:cancelAction];
    [alertController addAction:sureAction];
    
    [[UIApplication sharedApplication].keyWindow.rootViewController presentViewController:alertController animated:YES completion:nil];
}


- (void)awakeFromNib {
    [super awakeFromNib];
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end
